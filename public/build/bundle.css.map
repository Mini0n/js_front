{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/App.svelte",
    "../../src/Product.svelte",
    "../../src/Loading.svelte",
    "../../src/ErrorLoading.svelte",
    "../../src/SearchBar.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Loading from './Loading.svelte'\n\timport ErrorLoading from './ErrorLoading.svelte'\n\timport Product from './Product.svelte'\n\timport SearchBar from './SearchBar.svelte'\n\n\n\t// let app_status = { loaded: true, loading: false, error: false };\n\n\tconst products_api = 'https://js-amazon-test.herokuapp.com/products/';\n\tlet products = [];\n\n\tlet promise_products = getProducts();\n\n\tasync function searchProduct(ASIN){\n\t\tconst res = await fetch(products_api + ASIN);\n\t\tconst txt = await res.json();\n\n\t\tif (res.ok){\n\t\t\tpromiseClick();\n\t\t\t// return txt.products.length;\n\t\t} else {\n\t\t\tthrow new Error(txt);\n\t\t}\n\t}\n\n\n\tasync function getProducts(){\n\t\tconst res = await fetch(products_api);\n\t\tconst txt = await res.json();\n\n\t\tif (res.ok){\n\t\t\tproducts = txt.products;\n\t\t\treturn txt.products.length;\n\t\t} else {\n\t\t\tthrow new Error(txt);\n\t\t}\n\t}\n\n\tfunction promiseClick(){\n\t\tconsole.log('loading products...')\n\t\tpromise_products = getProducts();\n\t}\n\n\tfunction searchClick(searchString){\n\t\tconsole.log('search: ' + searchString);\n\t\tsearchProduct(searchString);\n\t}\n\n\tfunction handleMessage(event){\n\t\t// alert(event.detail.action);\n\t\tswitch(event.detail.action) {\n\t\t\tcase 'reload': promiseClick(); break;\n\t\t\tcase 'search': \n\t\t\t\tsearchClick(event.detail.searchString);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n</script>\n\n<main>\n\n\t<h1><pre>Products</pre></h1>\n\n\n\n\t{#await promise_products}\n\t\t<Loading/>\n\t{:then value}\n\n\t\t<SearchBar on:message={handleMessage}/>\n\n\t\t\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t{#each products as prod (prod.id)}\n\t\t\t\t\t<Product asin={prod.asin} name={prod.name} category={prod.category} rank={prod.rank} \n\t\t\t\t\t\t\t\t\t weight={prod.weight} dimensions={prod.dimensions} />\n\n\t\t\t\t{/each}\n\t\t\t</tbody>\n\t\t</table>\n\t\t<p>{value} {value === 1 ? 'product' : 'products'} loaded</p>\n\t{:catch error}\n\t\t<ErrorLoading/>\n\t{/await}\n\n\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 3em;\n\t\tfont-weight: 100;\n\t}\n\n\ttable {\n\t\twidth: 100%;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n  export let asin = 2818281;\n  export let name = 'ola k ase';\n  export let category = 'product';\n  export let rank = '2.5'\n  export let weight = '43 lb';\n  export let dimensions = '1 x 2 x 3 inch';\n  let count = 0;\n\n\n  function handleClick(){\n    count += 1;\n  }\n</script>\n\n<style>\n  tr {\n    text-align: left;\n    font-family: monospace;\n    /* color: purple; */\n  }\n  td {\n    padding: 0.3em 0.5em;\n  }\n\n  .asin, .rank {\n    font-weight: bold;\n  }\n</style>\n\n<tr on:click={handleClick}>\n  <td class='asin'>{asin}</td>\n  <td>{category}</td>\n  <td>{name.length > 20 ? name.slice(0,20)+'...' : name}</td>\n  <td>{weight}</td>\n  <td>{dimensions}</td>\n  <td class='rank'>{rank}</td>\n</tr>\n",
    "<script>\n  // your script goes here\n  let status = true;\n</script>\n\n<style>\n  p {\n    text-align: center;\n  }\n</style>\n\n<!-- markup (zero or more items) goes here -->\n<p>loading...</p>\n",
    "<script>\n  // your script goes here\n  let status = true;\n</script>\n\n<style>\n  pre {\n    text-align: center;\n    color: darkred;\n  }\n</style>\n\n<!-- markup (zero or more items) goes here -->\n\n  <pre>ERROR Loading x_x</pre>\n\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n\n  let searchString = '';\n  // export let products = [];\n\n  function searchClick(){\n    dispatch('message', { action: 'search', searchString: searchString });\n  }\n\n  function reloadProducts(){\n    dispatch('message', {action: 'reload'});\n  }\n\n\n  \n</script>\n\n<style>\n  input {\n    font-family: monospace;\n    width: 100%;\n  }\n  .search-div {\n    width: 100%;\n    display: inline-block;\n    padding: 0.5em;\n  }\n  .search-input {\n    /* width: 65%; */\n    display: inline-block;\n  }\n\n  .buttons {\n    /* width: 20%; */\n    display: inline-block;\n  }\n</style>\n\n<div class=\"search-div\">\n  <div class=\"search-input\">\n    <input type=\"text\" placeholder=\"ASIN\" bind:value={searchString}>\n  </div>\n  <div class=\"buttons\">\n  \t<button on:click={searchClick}>\n\t\tAdd Product by ASIN\n\t</button>\n  <button on:click={reloadProducts}>\n\t\tReload Products\n\t</button>\n  </div>\n</div>"
  ],
  "names": [],
  "mappings": "AA4FC,IAAI,eAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,eAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,KAAK,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;AClGA,EAAE,cAAC,CAAC,AACF,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,SAAS,AAExB,CAAC,AACD,EAAE,cAAC,CAAC,AACF,OAAO,CAAE,KAAK,CAAC,KAAK,AACtB,CAAC,AAED,mBAAK,CAAE,KAAK,cAAC,CAAC,AACZ,WAAW,CAAE,IAAI,AACnB,CAAC;ACrBD,CAAC,cAAC,CAAC,AACD,UAAU,CAAE,MAAM,AACpB,CAAC;ACFD,GAAG,eAAC,CAAC,AACH,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,OAAO,AAChB,CAAC;ACaD,KAAK,eAAC,CAAC,AACL,WAAW,CAAE,SAAS,CACtB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,WAAW,eAAC,CAAC,AACX,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,KAAK,AAChB,CAAC,AACD,aAAa,eAAC,CAAC,AAEb,OAAO,CAAE,YAAY,AACvB,CAAC,AAED,QAAQ,eAAC,CAAC,AAER,OAAO,CAAE,YAAY,AACvB,CAAC"
}